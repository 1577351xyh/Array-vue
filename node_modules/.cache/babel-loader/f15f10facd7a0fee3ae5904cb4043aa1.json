{"remainingRequest":"/Users/dahei/Desktop/项目/Array-vue/node_modules/babel-loader/lib/index.js!/Users/dahei/Desktop/项目/Array-vue/src/hppt/api.js","dependencies":[{"path":"/Users/dahei/Desktop/项目/Array-vue/src/hppt/api.js","mtime":1578591472829},{"path":"/Users/dahei/Desktop/项目/Array-vue/node_modules/cache-loader/dist/cjs.js","mtime":1575802732343},{"path":"/Users/dahei/Desktop/项目/Array-vue/node_modules/babel-loader/lib/index.js","mtime":1576767844180}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCB7IE1lc3NhZ2VCb3gsIE1lc3NhZ2UgfSBmcm9tICJlbGVtZW50LXVpIjsKaW1wb3J0ICdlbGVtZW50LXVpL2xpYi90aGVtZS1jaGFsay9pbmRleC5jc3MnOyAvL2F4aW9z5a6e5L6LCgp2YXIgaHR0cCA9IGF4aW9zLmNyZWF0ZSh7Ly8g5Z+65Zyw5Z2ACiAgLy8gaG9zdDonaHR0cDovL3NzYy5sZ3FnZy5jbicsCiAgLy8gYmFzZVVSTDogJ2h0dHA6Ly9zc2MubGdxZ2cuY24vJywKICAvL+i2heaXtgogIC8vIHRpbWVvdXQ6NTAwMAp9KTsgLy/muLjmiI/liJfooagKCmh0dHAuZ2FtZUxpc3QgPSBmdW5jdGlvbiAoKSB7CiAgcmV0dXJuIGh0dHAuZ2V0KCcvYXBpL2dhbWUvZ2FtZUxpc3QnKTsKfTsgLy/njqnms5XliJfooagKCgpodHRwLnBsYXlMaXN0ID0gZnVuY3Rpb24gKGlkKSB7CiAgcmV0dXJuIGh0dHAuZ2V0KCIvYXBpL2dhbWUvcGxheUxpc3RzLyIuY29uY2F0KGlkKSk7Cn07IC8v6LWU546H5YiX6KGoCgoKaHR0cC5vZGRzSW5mb0xpc3QgPSBmdW5jdGlvbiAoaWQpIHsKICByZXR1cm4gaHR0cC5nZXQoIi9hcGkvZ2FtZS9vZGRzSW5mb0xpc3QvIi5jb25jYXQoaWQpKTsKfTsgLy/mnIDov5HljYHmnJ/kuK3lpZborrDlvZUKCgpodHRwLlJlc3VsdCA9IGZ1bmN0aW9uIChpZCkgewogIHJldHVybiBodHRwLmdldCgiL2FwaS9way9vcGVuSXNzdWVSZXN1bHQvIi5jb25jYXQoaWQpKTsKfTsgLy/lvZPliY3mnJ/lj7cKCgpodHRwLm5vd0lzc3VlID0gZnVuY3Rpb24gKGlkKSB7CiAgcmV0dXJuIGh0dHAuZ2V0KCIvYXBpL3BrL25vd0lzc3VlLyIuY29uY2F0KGlkKSk7Cn07IC8v5oqV5rOo6K6w5b2VCgoKaHR0cC5iZXRMb2cgPSBmdW5jdGlvbiAoaWQpIHsKICByZXR1cm4gaHR0cC5nZXQoIi9hcGkvYmV0L2JldExvZy8iLmNvbmNhdChpZCkpOwp9OyAvLyAvL+S4i+azqAovLyBodHRwLmJldHRpbmcgPSAoe3VzZXJfaWQsIHJvb21faWQsIGlzc3VlLH0sIG9iaikgPT4gewovLyAgICAgcmV0dXJuIGh0dHAucG9zdCgnL3BrL2JldHRpbmcnLCB7Ci8vICAgICAgICAgLy/lhpnmrbsKLy8gICAgICAgICB1c2VyX2lkOjI0LAovLyAgICAgICAgIC8v5YaZ5q27Ci8vICAgICAgICAgcm9vbV9pZDoyNCwKLy8gICAgICAgICAvL+W9k+WJjeacn+aLvwovLyAgICAgICAgIGlzc3VlOgovLyAgICAgICAgIC8vIGJldF9pbmZvOiBvYmoKLy8gICAgIH0pCi8vIH0KCi8qIHsKbXVsdGlwbGU6IOWAjeaooSwKbnVtOiDms6jmlbAsCm9kZHNfaWQ6IOi1lOeOh2lkLApjb250ZW50OiDmipXms6jlhoXlrrlbXSwKcGxheV9kZXNjOiDmj4/ov7BbdGFiMl0KbW9uZXk65q+P5rOo5aSa5bCR5YWDKOm7mOiupDLlhYPkuIDms6gpCn0qLwovL+ivt+axguaLpuaIqgovLyBodHRwLmludGVyY2VwdG9ycy5yZXF1ZXN0LnVzZSgKLy8gICAgIGNvbmZpZz0+ewovLyAgICAgICAgIGlmKENvb2tpZXMuZ2V0KCd0b2tlbicpKXsKLy8gICAgICAgICAgICAgY29uZmlnLmhlYWRlcnNbJ1gtVG9rZW4nXSA9IENvb2tpZXMuZ2V0KCd0b2tlbicpCi8vICAgICAgICAgfQovLyAgICAgICAgIHJldHVybiBjb25maWc7Ci8vICAgICB9LAovLyAgICAgLy/or7fmsYLnmoTplJnor6/lpITnkIYKLy8gICAgIGVycm9yID0+IHsKLy8gICAgICAgICByZXR1cm4gUHJvbWlzcy5yZWplY3QoZXJyb3IpCi8vICAgICB9Ci8vICk7Ci8vIOWTjeW6lOaLpuaIqgoKCmh0dHAuaW50ZXJjZXB0b3JzLnJlc3BvbnNlLnVzZShmdW5jdGlvbiAocmVzcG9uc2UpIHsKICB2YXIgcmVzID0gcmVzcG9uc2U7IC8vMjAwCgogIGlmIChyZXMuc3RhdHVzICE9PSAyMDApIHsKICAgIE1lc3NhZ2UoewogICAgICBtZXNzYWdlOiByZXMuZGF0YS5tZXNzYWdlIHx8ICdlcnJvcicKICAgIH0pOwogIH0gLy8g5Luk54mM6L+H5pyfLOi/h+acn+eZu+W9lQoKCiAgaWYgKHJlcy5jb2RlID09PSA1MDEpIHsKICAgIE1lc3NhZ2VCb3guY29uZmlybSgn55m75b2V5byC5bi4LOivt+mHjeaWsOeZu+W9lScsICfnoa7orqTnmbvlvZXkv6Hmga8nLCB7CiAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiAi6YeN5paw55m75b2VIiwKICAgICAgY2FuY2VsQnV0dG9uVGV4dDogIuWPlua2iCIsCiAgICAgIHR5cGU6ICJ3YXJuaW5nIgogICAgfSkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgIC8v5aaC5p6c54K55Ye756Gu5a6a5LqGCiAgICAgIC8v6YeN5paw5Y+R6YCB6K+35rGCLOWIt+aWsOmhtemdogogICAgICBjb25zb2xlLmxvZygn5oiR6KaB6YeN5paw6I635Y+WdG9rZW4nKTsKICAgICAgbG9jYXRpb24ucmVsb2FkKCk7CiAgICB9KTsKICAgIHJldHVybiBQcm9taXNlLnJlamVjdChuZXcgRXJyb3IocmVzLm1lc3NhZ2UpIHx8ICdlcnJvcicpOwogIH0gZWxzZSB7CiAgICByZXR1cm4gcmVzOwogIH0KfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgTWVzc2FnZSh7CiAgICBtZXNzYWdlOiBlcnJvci5tZXNzYWdlLAogICAgdHlwZTogImVycm9yIiwKICAgIGR1cmF0aW9uOiA1ICogMTAwMAogIH0pOwogIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7Cn0pOwpleHBvcnQgZGVmYXVsdCBodHRwOw=="},{"version":3,"sources":["/Users/dahei/Desktop/项目/Array-vue/src/hppt/api.js"],"names":["axios","MessageBox","Message","http","create","gameList","get","playList","id","oddsInfoList","Result","nowIssue","betLog","interceptors","response","use","res","status","message","data","code","confirm","confirmButtonText","cancelButtonText","type","then","console","log","location","reload","Promise","reject","Error","error","duration"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,EAAoBC,OAApB,QAAkC,YAAlC;AACA,OAAO,sCAAP,C,CACA;;AACA,IAAMC,IAAI,GAAGH,KAAK,CAACI,MAAN,CAAa,CACtB;AACA;AACA;AACA;AACA;AALsB,CAAb,CAAb,C,CAQA;;AACAD,IAAI,CAACE,QAAL,GAAgB,YAAM;AAClB,SAAOF,IAAI,CAACG,GAAL,CAAS,oBAAT,CAAP;AACH,CAFD,C,CAGA;;;AACAH,IAAI,CAACI,QAAL,GAAgB,UAACC,EAAD,EAAQ;AACpB,SAAOL,IAAI,CAACG,GAAL,+BAAgCE,EAAhC,EAAP;AACH,CAFD,C,CAGA;;;AACAL,IAAI,CAACM,YAAL,GAAoB,UAACD,EAAD,EAAQ;AACxB,SAAOL,IAAI,CAACG,GAAL,kCAAmCE,EAAnC,EAAP;AACH,CAFD,C,CAGA;;;AACAL,IAAI,CAACO,MAAL,GAAc,UAACF,EAAD,EAAQ;AAClB,SAAOL,IAAI,CAACG,GAAL,mCAAoCE,EAApC,EAAP;AACH,CAFD,C,CAGA;;;AACAL,IAAI,CAACQ,QAAL,GAAgB,UAACH,EAAD,EAAQ;AACpB,SAAOL,IAAI,CAACG,GAAL,4BAA6BE,EAA7B,EAAP;AACH,CAFD,C,CAGA;;;AACAL,IAAI,CAACS,MAAL,GAAc,UAACJ,EAAD,EAAQ;AAClB,SAAOL,IAAI,CAACG,GAAL,2BAA4BE,EAA5B,EAAP;AACH,CAFD,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;AACAL,IAAI,CAACU,YAAL,CAAkBC,QAAlB,CAA2BC,GAA3B,CACI,UAAAD,QAAQ,EAAE;AACN,MAAME,GAAG,GAAGF,QAAZ,CADM,CAEN;;AACA,MAAGE,GAAG,CAACC,MAAJ,KAAa,GAAhB,EAAoB;AAChBf,IAAAA,OAAO,CAAC;AACJgB,MAAAA,OAAO,EAACF,GAAG,CAACG,IAAJ,CAASD,OAAT,IAAoB;AADxB,KAAD,CAAP;AAGH,GAPK,CAQN;;;AACA,MAAGF,GAAG,CAACI,IAAJ,KAAW,GAAd,EAAkB;AACdnB,IAAAA,UAAU,CAACoB,OAAX,CACI,YADJ,EAEI,QAFJ,EAEa;AACLC,MAAAA,iBAAiB,EAAE,MADd;AAELC,MAAAA,gBAAgB,EAAE,IAFb;AAGLC,MAAAA,IAAI,EAAE;AAHD,KAFb,EAOEC,IAPF,CAOO,YAAI;AACP;AACA;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAC,MAAAA,QAAQ,CAACC,MAAT;AACH,KAZD;AAaA,WAAOC,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAUhB,GAAG,CAACE,OAAd,KAAwB,OAAvC,CAAP;AACH,GAfD,MAeK;AACD,WAAOF,GAAP;AACH;AACJ,CA5BL,EA6BI,UAAAiB,KAAK,EAAI;AACL/B,EAAAA,OAAO,CAAC;AACJgB,IAAAA,OAAO,EAAEe,KAAK,CAACf,OADX;AAEJM,IAAAA,IAAI,EAAE,OAFF;AAGJU,IAAAA,QAAQ,EAAE,IAAI;AAHV,GAAD,CAAP;AAKA,SAAOJ,OAAO,CAACC,MAAR,CAAeE,KAAf,CAAP;AACH,CApCL;AAuCA,eAAe9B,IAAf","sourcesContent":["import axios from 'axios'\nimport {MessageBox, Message} from \"element-ui\";\nimport 'element-ui/lib/theme-chalk/index.css';\n//axios实例\nconst http = axios.create({\n    // 基地址\n    // host:'http://ssc.lgqgg.cn',\n    // baseURL: 'http://ssc.lgqgg.cn/',\n    //超时\n    // timeout:5000\n});\n\n//游戏列表\nhttp.gameList = () => {\n    return http.get('/api/game/gameList')\n};\n//玩法列表\nhttp.playList = (id) => {\n    return http.get(`/api/game/playLists/${id}`)\n};\n//赔率列表\nhttp.oddsInfoList = (id) => {\n    return http.get(`/api/game/oddsInfoList/${id}`)\n};\n//最近十期中奖记录\nhttp.Result = (id) => {\n    return http.get(`/api/pk/openIssueResult/${id}`)\n};\n//当前期号\nhttp.nowIssue = (id) => {\n    return http.get(`/api/pk/nowIssue/${id}`)\n};\n//投注记录\nhttp.betLog = (id) => {\n    return http.get(`/api/bet/betLog/${id}`)\n};\n// //下注\n// http.betting = ({user_id, room_id, issue,}, obj) => {\n//     return http.post('/pk/betting', {\n//         //写死\n//         user_id:24,\n//         //写死\n//         room_id:24,\n//         //当前期拿\n//         issue:\n//         // bet_info: obj\n//     })\n// }\n\n/* {\nmultiple: 倍模,\nnum: 注数,\nodds_id: 赔率id,\ncontent: 投注内容[],\nplay_desc: 描述[tab2]\nmoney:每注多少元(默认2元一注)\n}*/\n\n\n\n//请求拦截\n// http.interceptors.request.use(\n//     config=>{\n//         if(Cookies.get('token')){\n//             config.headers['X-Token'] = Cookies.get('token')\n//         }\n//         return config;\n//     },\n//     //请求的错误处理\n//     error => {\n//         return Promiss.reject(error)\n//     }\n// );\n\n\n// 响应拦截\nhttp.interceptors.response.use(\n    response=>{\n        const res = response;\n        //200\n        if(res.status!==200){\n            Message({\n                message:res.data.message || 'error'\n            })\n        }\n        // 令牌过期,过期登录\n        if(res.code===501){\n            MessageBox.confirm(\n                '登录异常,请重新登录',\n                '确认登录信息',{\n                    confirmButtonText: \"重新登录\",\n                    cancelButtonText: \"取消\",\n                    type: \"warning\"\n                }\n            ).then(()=>{\n                //如果点击确定了\n                //重新发送请求,刷新页面\n                console.log('我要重新获取token')\n                location.reload();\n            })\n            return Promise.reject(new Error(res.message)||'error')\n        }else{\n            return res;\n        }\n    },\n    error => {\n        Message({\n            message: error.message,\n            type: \"error\",\n            duration: 5 * 1000\n        });\n        return Promise.reject(error);\n    }\n)\n\nexport default http;"]}]}