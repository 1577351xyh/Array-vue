{"remainingRequest":"/Users/tengmei-1/Desktop/项目/test-git/Array-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tengmei-1/Desktop/项目/test-git/Array-vue/src/components/item/item.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/tengmei-1/Desktop/项目/test-git/Array-vue/src/components/item/item.vue","mtime":1578448818251},{"path":"/Users/tengmei-1/Desktop/项目/test-git/Array-vue/node_modules/css-loader/dist/cjs.js","mtime":1578385552663},{"path":"/Users/tengmei-1/Desktop/项目/test-git/Array-vue/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1578385552870},{"path":"/Users/tengmei-1/Desktop/项目/test-git/Array-vue/node_modules/postcss-loader/src/index.js","mtime":1578385552863},{"path":"/Users/tengmei-1/Desktop/项目/test-git/Array-vue/node_modules/sass-loader/dist/cjs.js","mtime":1578387868470},{"path":"/Users/tengmei-1/Desktop/项目/test-git/Array-vue/node_modules/cache-loader/dist/cjs.js","mtime":1578385544915},{"path":"/Users/tengmei-1/Desktop/项目/test-git/Array-vue/node_modules/vue-loader/lib/index.js","mtime":1578385552870}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5pdGVtIHsKICBkaXNwbGF5OiBmbGV4OwogIHdpZHRoOiA1MCU7CiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwogIG1hcmdpbjogMTBweCAwOwogIC5pdGVtLWNoaWxkZXIgewogICAgd2lkdGg6IDQwcHg7CiAgICBjb2xvcjogIzAwMDAwMDsKICAgIGhlaWdodDogNDBweDsKICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7CiAgICBib3JkZXI6IDFweCBzb2xpZCAjYzBjNWQyOwogICAgYm9yZGVyLXJhZGl1czogNTAlOwogICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgbGluZS1oZWlnaHQ6IDQwcHg7CiAgICBjdXJzb3I6IHBvaW50ZXI7CiAgfQogIC5hY3RpdmUgewogICAgYmFja2dyb3VuZC1jb2xvcjogI2QyNGMxMDsKICAgIGNvbG9yOiAjZmZmZmZmOwogIH0KfQo="},{"version":3,"sources":["item.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"item.vue","sourceRoot":"src/components/item","sourcesContent":["<template>\n  <div class=\"item\">\n    <div\n      v-if=\"choice\"\n      v-for=\"(item, index) in arr\"\n      :class=\"{ active: indexs == index }\"\n      class=\"item-childer\"\n      @click.stop=\"onChange(index)\"\n    >\n      {{ item }}\n    </div>\n\n    <div\n      v-if=\"!choice\"\n      v-for=\"(item, index) in arr\"\n      :class=\"{ active: activeItem.indexOf(arr[index]) > -1 }\"\n      class=\"item-childer\"\n      @click.stop=\"onChange(index, $event)\"\n      ref=\"content\"\n    >\n      {{ item }}\n    </div>\n  </div>\n</template>\n<script>\nexport default {\n  name: 'items',\n  props: {\n    choice: {\n      type: Boolean\n    }\n  },\n  data() {\n    return {\n      arr: ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10'],\n      activeItem: [],\n      indexs: undefined\n    }\n  },\n  methods: {\n    onChange(index) {\n      this.indexs = index\n      if (!this.choice) {\n        let content = this.$refs.content[index].innerText\n        if (this.activeItem.indexOf(content) > -1) {\n          let content = this.$refs.content[index].innerText\n          let contentIndex = this.getArrayIndex(this.activeItem, content)\n          this.activeItem.splice(contentIndex, 1)\n        } else {\n          this.activeItem.push(this.arr[index])\n        }\n      } else {\n        this.activeItem.push(this.arr[index])\n      }\n    },\n    getArrayIndex(arr, obj) {\n      var i = arr.length\n      while (i--) {\n        if (arr[i] === obj) {\n          return i\n          console.log(i)\n        }\n      }\n      return -1\n    }\n  }\n}\n</script>\n\n<style type=\"text/scss\" lang=\"scss\">\n.item {\n  display: flex;\n  width: 50%;\n  justify-content: space-between;\n  margin: 10px 0;\n  .item-childer {\n    width: 40px;\n    color: #000000;\n    height: 40px;\n    background-color: #fff;\n    border: 1px solid #c0c5d2;\n    border-radius: 50%;\n    text-align: center;\n    line-height: 40px;\n    cursor: pointer;\n  }\n  .active {\n    background-color: #d24c10;\n    color: #ffffff;\n  }\n}\n</style>\n"]}]}