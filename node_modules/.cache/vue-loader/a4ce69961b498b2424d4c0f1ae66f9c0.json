{"remainingRequest":"/Users/tengmei-1/Desktop/项目/test-git/Array-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tengmei-1/Desktop/项目/test-git/Array-vue/src/components/item/itemp2.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tengmei-1/Desktop/项目/test-git/Array-vue/src/components/item/itemp2.vue","mtime":1578448818252},{"path":"/Users/tengmei-1/Desktop/项目/test-git/Array-vue/node_modules/cache-loader/dist/cjs.js","mtime":1578385544915},{"path":"/Users/tengmei-1/Desktop/项目/test-git/Array-vue/node_modules/babel-loader/lib/index.js","mtime":1578385544918},{"path":"/Users/tengmei-1/Desktop/项目/test-git/Array-vue/node_modules/cache-loader/dist/cjs.js","mtime":1578385544915},{"path":"/Users/tengmei-1/Desktop/项目/test-git/Array-vue/node_modules/vue-loader/lib/index.js","mtime":1578385552870}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBpdGVtIGZyb20gJy4vaXRlbScKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnJywKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcHJpY2U6ICcxJywKICAgICAgbnVtczogJzEnLAogICAgICBudW06IDEsCiAgICAgIGFycjogWzEsIDIsIDMsIDQsIDVdLAogICAgICBzdHI6ICcnLAogICAgICBjaGlsZGVyQXJyOiBbXSwKICAgICAgQmV0TnViOiAnJywKICAgICAgbmV3QXJyYXk6IFtdCiAgICB9CiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBpdGVtCiAgfSwKICBtZXRob2RzOiB7CiAgICBoYW5kbGVDaGFuZ2UodmFsdWUpIHsKICAgICAgY29uc29sZS5sb2codmFsdWUpCiAgICB9LAogICAgc3VibWl0KCkgewogICAgICB0aGlzLmNoaWxkZXJBcnIgPSB0aGlzLiRjaGlsZHJlbi5maWx0ZXIoCiAgICAgICAgdm0gPT4gdm0uJG9wdGlvbnMubmFtZSA9PT0gJ2l0ZW1zJwogICAgICApCiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5jaGlsZGVyQXJyLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgbGV0IHZtID0gdGhpcy4kY2hpbGRyZW5baV0KICAgICAgICAvL+W9k+WJjemAieS4reeahOWtl+espuS4suW6j+WIlwogICAgICAgIHRoaXMuZm9yaW4odm0uYWN0aXZlSXRlbSwgaSkKICAgICAgICAvL+iuoeeul+azqOaVsAogICAgICAgIHRoaXMubmV3QXJyYXkucHVzaCh2bS5hY3RpdmVJdGVtKQogICAgICB9CiAgICAgIHRoaXMuc3RyID0gdGhpcy5zdHIuc3Vic3RyKDAsIHRoaXMuc3RyLmxlbmd0aCAtIDEpCiAgICAgIGxldCBzdHJzID0gdGhpcy5zdHIKICAgICAgY29uc29sZS5sb2coYOW9k+WJjemAieS4rToke3N0cnN9YCkKICAgICAgLy/lvZPliY3ms6jmlbDpgLvovpEKICAgICAgdGhpcy5CZXQoKQogICAgICAvL+a4heepugogICAgICB0aGlzLmRlbGV0ZSh0aGlzLmNoaWxkZXJBcnIpCiAgICB9LAogICAgZm9yaW4oYXJyKSB7CiAgICAgIGlmIChhcnIubGVuZ3RoID09PSAwKSB7CiAgICAgICAgLy/msqHpgInkuK3nmoTnirbmgIEs5LiN5YeG5LiL5rOoCiAgICAgIH0gZWxzZSB7CiAgICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCBhcnIubGVuZ3RoOyBqKyspIHsKICAgICAgICAgIGlmIChqICsgMSA9PT0gYXJyLmxlbmd0aCkgewogICAgICAgICAgICB0aGlzLnN0ciArPSBhcnJbal0gKyAnLCcKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHRoaXMuc3RyICs9IGFycltqXSArICcgJwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIEJldCgpIHsKICAgICAgbGV0IGFycmFuZ2VtZW50QXJyYXkgPSB0aGlzLm5ld0FycmF5CiAgICAgIGxldCBhcnJhbmdlbWVudCA9IHRoaXMuZ2V0QXJyYXlCeUFycmF5cyhhcnJhbmdlbWVudEFycmF5KQogICAgICAvLyBjb25zb2xlLmxvZyhhcnJhbmdlbWVudCkKICAgICAgLy/mi4bop6PmlbDnu4QKICAgICAgbGV0IG9uZUFycmF5ID0gdGhpcy5EaXNtYW50bGluZyhhcnJhbmdlbWVudCkKICAgICAgY29uc29sZS5sb2coYCR7b25lQXJyYXkubGVuZ3RofeazqGApCiAgICB9LAogICAgRGlzbWFudGxpbmcoYXJyKSB7CiAgICAgIGNvbnNvbGUubG9nKGDkvKDov5vmnaXnmoTmlbDnu4RgKQogICAgICBjb25zb2xlLmxvZyhhcnIpCiAgICAgIGxldCBEaXNtYW50bGluZ0FycnMgPSBbXQogICAgICB2YXIgc3RyQXJyID0gbmV3IEFycmF5KCkKICAgICAgYXJyLmZvckVhY2godm0gPT4gewogICAgICAgIC8vIGNvbnNvbGUubG9nKHZtWzBdKTsKICAgICAgICAvL+WumuS5ieS4gOaVsOe7hAogICAgICAgIHN0ckFyciA9IHZtWzBdLnNwbGl0KCcsJykgLy/lrZfnrKbliIblibIKICAgICAgICBjb25zb2xlLmxvZyhg5Y676YeN5YmN55qE57uT5p6cJHtzdHJBcnJ9YCkKICAgICAgICBsZXQgc3RyQXJycyA9IHRoaXMudW5pcXVlKHN0ckFycikKICAgICAgICBjb25zb2xlLmxvZyhg5Y676YeN5ZCO55qE57uT5p6cJHtzdHJBcnJzfWApCiAgICAgICAgaWYgKHN0ckFycnMubGVuZ3RoID09PSBzdHJBcnIubGVuZ3RoKSB7CiAgICAgICAgICBEaXNtYW50bGluZ0FycnMucHVzaChzdHJBcnJzKQogICAgICAgIH0KICAgICAgfSkKICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmCiAgICAgIGNvbnNvbGUubG9nKCfov5Tlm57nmoTmlbDnu4QnKQogICAgICBjb25zb2xlLmxvZyhEaXNtYW50bGluZ0FycnMpCiAgICAgIHJldHVybiBEaXNtYW50bGluZ0FycnMKICAgIH0sCiAgICB1bmlxdWUoYXJyKSB7CiAgICAgIGNvbnN0IHJlcyA9IG5ldyBNYXAoKQogICAgICByZXR1cm4gYXJyLmZpbHRlcihhID0+ICFyZXMuaGFzKGEpICYmIHJlcy5zZXQoYSwgMSkpCiAgICB9LAogICAgLy/muIXnqboKICAgIGRlbGV0ZShhcnIpIHsKICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhcnIubGVuZ3RoOyBpKyspIHsKICAgICAgICBsZXQgdm0gPSBhcnJbaV0KICAgICAgICB2bS5hY3RpdmVJdGVtID0gW10KICAgICAgfQogICAgICB0aGlzLnN0ciA9ICcnCiAgICAgIHRoaXMubmV3QXJyYXkgPSBbXTsKICAgICAgLy8gY29uc29sZS5sb2coJ+WIoOmZpCcpCiAgICB9LAogICAgLy/kuozkvY3mlbDnu4TmjpLliJfnu4TlkIgKICAgIGdldEFycmF5QnlBcnJheXMoYXJyYXlzKSB7CiAgICAgIHZhciBhcnIgPSBbJyddCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXJyYXlzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgYXJyID0gdGhpcy5nZXRWYWx1ZXNCeUFycmF5KGFyciwgYXJyYXlzW2ldKQogICAgICB9CiAgICAgIHJldHVybiBhcnIKICAgIH0sCiAgICBnZXRWYWx1ZXNCeUFycmF5KGFycjEsIGFycjIpIHsKICAgICAgdmFyIGFyciA9IFtdCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXJyMS5sZW5ndGg7IGkrKykgewogICAgICAgIHZhciB2MSA9IGFycjFbaV0KICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IGFycjIubGVuZ3RoOyBqKyspIHsKICAgICAgICAgIHZhciB2MiA9IGFycjJbal0KICAgICAgICAgIGlmICh2MSA9PT0gJycpIHsKICAgICAgICAgICAgdmFyIHZhbHVlID0gW2Ake3YyfWBdCiAgICAgICAgICAgIGFyci5wdXNoKHZhbHVlKQogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgdmFyIHZhbHVlID0gW2Ake3YxfSwke3YyfWBdCiAgICAgICAgICAgIGFyci5wdXNoKHZhbHVlKQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgICByZXR1cm4gYXJyCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["itemp2.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"itemp2.vue","sourceRoot":"src/components/item","sourcesContent":["<template>\n  <div class=\"itemp\">\n    <div v-for=\"item in arr\">\n      <item :choice=\"false\"></item>\n    </div>\n\n    <div class=\"inputNumber flex\">\n      <div>你选中了{{ nums }}注</div>\n      <div class=\"flex margin_l\">\n        <el-input-number\n          v-model=\"num\"\n          @change=\"handleChange\"\n          :min=\"1\"\n          :max=\"10\"\n          label=\"描述文字\"\n        ></el-input-number>\n        <p>倍</p>\n      </div>\n      <div class=\"margin_l\">\n        <p>共{{ price }}元</p>\n      </div>\n    </div>\n\n    <!--    内容确定选项-->\n    <div></div>\n\n    <el-button type=\"success\" @click=\"submit\">马上投注</el-button>\n  </div>\n</template>\n\n<script>\nimport item from './item'\n\nexport default {\n  name: '',\n  data() {\n    return {\n      price: '1',\n      nums: '1',\n      num: 1,\n      arr: [1, 2, 3, 4, 5],\n      str: '',\n      childerArr: [],\n      BetNub: '',\n      newArray: []\n    }\n  },\n  components: {\n    item\n  },\n  methods: {\n    handleChange(value) {\n      console.log(value)\n    },\n    submit() {\n      this.childerArr = this.$children.filter(\n        vm => vm.$options.name === 'items'\n      )\n      for (let i = 0; i < this.childerArr.length; i++) {\n        let vm = this.$children[i]\n        //当前选中的字符串序列\n        this.forin(vm.activeItem, i)\n        //计算注数\n        this.newArray.push(vm.activeItem)\n      }\n      this.str = this.str.substr(0, this.str.length - 1)\n      let strs = this.str\n      console.log(`当前选中:${strs}`)\n      //当前注数逻辑\n      this.Bet()\n      //清空\n      this.delete(this.childerArr)\n    },\n    forin(arr) {\n      if (arr.length === 0) {\n        //没选中的状态,不准下注\n      } else {\n        for (let j = 0; j < arr.length; j++) {\n          if (j + 1 === arr.length) {\n            this.str += arr[j] + ','\n          } else {\n            this.str += arr[j] + ' '\n          }\n        }\n      }\n    },\n    Bet() {\n      let arrangementArray = this.newArray\n      let arrangement = this.getArrayByArrays(arrangementArray)\n      // console.log(arrangement)\n      //拆解数组\n      let oneArray = this.Dismantling(arrangement)\n      console.log(`${oneArray.length}注`)\n    },\n    Dismantling(arr) {\n      console.log(`传进来的数组`)\n      console.log(arr)\n      let DismantlingArrs = []\n      var strArr = new Array()\n      arr.forEach(vm => {\n        // console.log(vm[0]);\n        //定义一数组\n        strArr = vm[0].split(',') //字符分割\n        console.log(`去重前的结果${strArr}`)\n        let strArrs = this.unique(strArr)\n        console.log(`去重后的结果${strArrs}`)\n        if (strArrs.length === strArr.length) {\n          DismantlingArrs.push(strArrs)\n        }\n      })\n      // eslint-disable-next-line no-undef\n      console.log('返回的数组')\n      console.log(DismantlingArrs)\n      return DismantlingArrs\n    },\n    unique(arr) {\n      const res = new Map()\n      return arr.filter(a => !res.has(a) && res.set(a, 1))\n    },\n    //清空\n    delete(arr) {\n      for (let i = 0; i < arr.length; i++) {\n        let vm = arr[i]\n        vm.activeItem = []\n      }\n      this.str = ''\n      this.newArray = [];\n      // console.log('删除')\n    },\n    //二位数组排列组合\n    getArrayByArrays(arrays) {\n      var arr = ['']\n      for (var i = 0; i < arrays.length; i++) {\n        arr = this.getValuesByArray(arr, arrays[i])\n      }\n      return arr\n    },\n    getValuesByArray(arr1, arr2) {\n      var arr = []\n      for (var i = 0; i < arr1.length; i++) {\n        var v1 = arr1[i]\n        for (var j = 0; j < arr2.length; j++) {\n          var v2 = arr2[j]\n          if (v1 === '') {\n            var value = [`${v2}`]\n            arr.push(value)\n          } else {\n            var value = [`${v1},${v2}`]\n            arr.push(value)\n          }\n        }\n      }\n      return arr\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\" type=\"text/scss\">\n.itemp {\n  margin: 10px 0;\n}\n\n.flex {\n  display: flex;\n  align-items: center;\n}\n\n.margin_l {\n  margin-left: 15px;\n}\n</style>\n"]}]}