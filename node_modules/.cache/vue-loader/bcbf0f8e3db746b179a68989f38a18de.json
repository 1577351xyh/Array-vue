{"remainingRequest":"/Users/dahei/Desktop/项目/Array-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/dahei/Desktop/项目/Array-vue/src/components/item/itempar1.vue?vue&type=style&index=0&id=61d3d542&scoped=true&lang=scss&","dependencies":[{"path":"/Users/dahei/Desktop/项目/Array-vue/src/components/item/itempar1.vue","mtime":1578496932204},{"path":"/Users/dahei/Desktop/项目/Array-vue/node_modules/css-loader/dist/cjs.js","mtime":1578496924495},{"path":"/Users/dahei/Desktop/项目/Array-vue/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1578496931479},{"path":"/Users/dahei/Desktop/项目/Array-vue/node_modules/postcss-loader/src/index.js","mtime":1578496927753},{"path":"/Users/dahei/Desktop/项目/Array-vue/node_modules/sass-loader/dist/cjs.js","mtime":1578496929976},{"path":"/Users/dahei/Desktop/项目/Array-vue/node_modules/cache-loader/dist/cjs.js","mtime":1578496922704},{"path":"/Users/dahei/Desktop/项目/Array-vue/node_modules/vue-loader/lib/index.js","mtime":1578496931476}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLml0ZW1wIHsKICAgIG1hcmdpbjogMTBweCAwOwp9CgouZGVsZXRlIHsKICAgIGN1cnNvcjogcG9pbnRlcjsKfQoKLmJ1dHRvbSB7CiAgICBkaXNwbGF5OiBmbGV4OwogICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0OwogICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKfQoKLmZsZXggewogICAgZGlzcGxheTogZmxleDsKICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7Cn0KCi5tYXJnaW5fbCB7CiAgICBtYXJnaW4tbGVmdDogMTVweDsKfQo="},{"version":3,"sources":["itempar1.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsJA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"itempar1.vue","sourceRoot":"src/components/item","sourcesContent":["<template>\n    <div class=\"itemp\">\n        <div v-for=\"item in arr\">\n            <item :choice=\"true\"></item>\n        </div>\n\n        <div class=\"inputNumber flex\">\n            <div class=\"flex\">你选中了<p class=\"chooseColor\">{{ nums }}</p>注</div>\n            <div class=\"flex margin_l\">\n                <el-input-number\n                        v-model=\"num\"\n                        @change=\"handleChange\"\n                        :min=\"1\"\n                        :max=\"10\"\n                        label=\"描述文字\"\n                        size=\"small\"\n                ></el-input-number>\n                <p style=\"margin-left: 15px\">倍</p>\n            </div>\n            <div class=\"margin_l flex\">\n                共<p class=\"chooseColor\">{{ priceComputed }}</p>元\n            </div>\n\n        </div>\n        <div class=\"buttom\">\n            <el-button type=\"success\" @click=\"submit\">确定选号</el-button>\n            <el-button type=\"success\" @click=\"buy\">确定下注</el-button>\n        </div>\n\n        <div>\n            <ul class=\"ul-box\">\n                <li v-for=\"(item,index) in chooseArray\">\n                    <p>{{item.str}}</p>\n                    <!--                    <p>详细</p>-->\n                    <p>{{item.nums}}注</p>\n                    <p>{{item.num}}倍</p>\n                    <p>{{item.price}}元</p>\n                    <p>可中金额?</p>\n                    <p @click=\"ItemDelete(index)\" class=\"delete\">删除</p>\n                </li>\n            </ul>\n        </div>\n\n    </div>\n</template>\n\n<script>\n    import item from './item'\n\n    export default {\n        name: '',\n        props: {\n          arr:{\n            type:Array\n          }\n        },\n        data() {\n            return {\n                //注数\n                nums: 0,\n                //倍数\n                num: 1,\n                str: '',\n                childerArr: [],\n                BetArr: [],\n                price: undefined,\n                chooseArray: []\n            }\n        },\n        components: {\n            item\n        },\n        computed: {\n            //价格\n            priceComputed() {\n                this.price = this.num * 2 * this.nums;\n                return this.num * 2 * this.nums;\n            }\n        },\n        methods: {\n            buy() {\n\n            },\n            handleChange(value) {\n                console.log(value)\n            },\n            submit() {\n                //先提交数据\n                this.chooseArray.push({\n                    str: this.str,\n                    price: this.price,\n                    nums: this.nums,\n                    num: this.num\n                });\n                this.str = '';\n                this.BetArr = [];\n                this.num = 0;\n                this.childerArr = this.$children.filter(\n                    vm => vm.$options.name === 'items'\n                );\n                //清空\n                this.delete(this.childerArr)\n            },\n            onChange() {\n                this.BetArr = [];\n                this.str = '';\n\n                this.childerArr = this.$children.filter(\n                    vm => vm.$options.name === 'items'\n                );\n                for (let i = 0; i < this.childerArr.length; i++) {\n                    let vm = this.$children[i]\n                    this.forin(vm.activeItem, i)\n                }\n                this.str = this.str.substr(0, this.str.length - 1)\n                //当前注数\n                let strs = this.str;\n                this.nums = this.BetArr.length;\n                console.log(`当前注${this.nums}`);\n                console.log(`当前选中:${this.str}`)\n\n            },\n            forin(arr) {\n                if (arr.length === 0) {\n                    this.str += '-,'\n                } else {\n                    for (let j = 0; j < arr.length; j++) {\n                        this.str += arr[j] + ','\n                        this.BetArr.push(arr[j])\n                    }\n                }\n            },\n            //清空\n            delete(arr) {\n                for (let i = 0; i < arr.length; i++) {\n                    let vm = arr[i]\n                    vm.activeItem = []\n                    vm.indexs = undefined;\n                }\n                this.BetArr = []\n                this.str = ''\n            },\n            ItemDelete(index) {\n                this.chooseArray.splice(index, 1)\n            }\n        }\n    }\n</script>\n\n<style scoped lang=\"scss\" type=\"text/scss\">\n    .itemp {\n        margin: 10px 0;\n    }\n\n    .delete {\n        cursor: pointer;\n    }\n\n    .buttom {\n        display: flex;\n        justify-content: flex-start;\n        align-items: center;\n    }\n\n    .flex {\n        display: flex;\n        align-items: center;\n    }\n\n    .margin_l {\n        margin-left: 15px;\n    }\n</style>\n"]}]}